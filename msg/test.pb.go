// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	test.proto
	test2.proto

It has these top-level messages:
	TestMessage
	LoginReq
	LoginAns
	EnterChReq
	EnterChAns
	LeaveChReq
	LeaveChAns
	EnterRmReq
	EnterRmAns
	EnterRmNot
	LeaveRmReq
	LeaveRmAns
	LeaveRmNot
	RelayReq
	RelayAns
	RelayNot
	RegistReq
	RegistAns
	PingReq
	PongAns
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// sample type
type TestType int32

const (
	TestType_TYPE_1 TestType = 0
	TestType_TYPE_2 TestType = 1
	TestType_TYPE_3 TestType = 2
)

var TestType_name = map[int32]string{
	0: "TYPE_1",
	1: "TYPE_2",
	2: "TYPE_3",
}
var TestType_value = map[string]int32{
	"TYPE_1": 0,
	"TYPE_2": 1,
	"TYPE_3": 2,
}

func (x TestType) Enum() *TestType {
	p := new(TestType)
	*p = x
	return p
}
func (x TestType) String() string {
	return proto.EnumName(TestType_name, int32(x))
}
func (x *TestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TestType_value, data, "TestType")
	if err != nil {
		return err
	}
	*x = TestType(value)
	return nil
}
func (TestType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Error type
type ErrorCode int32

const (
	ErrorCode_ERR_SUCCESS       ErrorCode = 0
	ErrorCode_ERR_LOGIN_FAIL    ErrorCode = 1
	ErrorCode_ERR_ARGUMENT_FAIL ErrorCode = 2
)

var ErrorCode_name = map[int32]string{
	0: "ERR_SUCCESS",
	1: "ERR_LOGIN_FAIL",
	2: "ERR_ARGUMENT_FAIL",
}
var ErrorCode_value = map[string]int32{
	"ERR_SUCCESS":       0,
	"ERR_LOGIN_FAIL":    1,
	"ERR_ARGUMENT_FAIL": 2,
}

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}
func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (x *ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorCode_value, data, "ErrorCode")
	if err != nil {
		return err
	}
	*x = ErrorCode(value)
	return nil
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Msg_Id int32

const (
	Msg_Id_Login_Req    Msg_Id = 1
	Msg_Id_Login_Ans    Msg_Id = 2
	Msg_Id_Enter_Ch_Req Msg_Id = 3
	Msg_Id_Enter_Ch_Ans Msg_Id = 4
	Msg_Id_Enter_Ch_Not Msg_Id = 5
	Msg_Id_Leave_Ch_Req Msg_Id = 6
	Msg_Id_Leave_Ch_Ans Msg_Id = 7
	Msg_Id_Leave_Ch_Not Msg_Id = 8
	Msg_Id_Enter_Rm_Req Msg_Id = 13
	Msg_Id_Enter_Rm_Ans Msg_Id = 14
	Msg_Id_Enter_Rm_Not Msg_Id = 15
	Msg_Id_Leave_Rm_Req Msg_Id = 16
	Msg_Id_Leave_Rm_Ans Msg_Id = 17
	Msg_Id_Leave_Rm_Not Msg_Id = 18
	Msg_Id_Regist_Req   Msg_Id = 2001
	Msg_Id_Regist_Ans   Msg_Id = 2002
	Msg_Id_Ping_Req     Msg_Id = 1001
	Msg_Id_Pong_Ans     Msg_Id = 1002
	Msg_Id_Relay_Req    Msg_Id = 101
	Msg_Id_Relay_Ans    Msg_Id = 102
	Msg_Id_Relay_Not    Msg_Id = 103
)

var Msg_Id_name = map[int32]string{
	1:    "Login_Req",
	2:    "Login_Ans",
	3:    "Enter_Ch_Req",
	4:    "Enter_Ch_Ans",
	5:    "Enter_Ch_Not",
	6:    "Leave_Ch_Req",
	7:    "Leave_Ch_Ans",
	8:    "Leave_Ch_Not",
	13:   "Enter_Rm_Req",
	14:   "Enter_Rm_Ans",
	15:   "Enter_Rm_Not",
	16:   "Leave_Rm_Req",
	17:   "Leave_Rm_Ans",
	18:   "Leave_Rm_Not",
	2001: "Regist_Req",
	2002: "Regist_Ans",
	1001: "Ping_Req",
	1002: "Pong_Ans",
	101:  "Relay_Req",
	102:  "Relay_Ans",
	103:  "Relay_Not",
}
var Msg_Id_value = map[string]int32{
	"Login_Req":    1,
	"Login_Ans":    2,
	"Enter_Ch_Req": 3,
	"Enter_Ch_Ans": 4,
	"Enter_Ch_Not": 5,
	"Leave_Ch_Req": 6,
	"Leave_Ch_Ans": 7,
	"Leave_Ch_Not": 8,
	"Enter_Rm_Req": 13,
	"Enter_Rm_Ans": 14,
	"Enter_Rm_Not": 15,
	"Leave_Rm_Req": 16,
	"Leave_Rm_Ans": 17,
	"Leave_Rm_Not": 18,
	"Regist_Req":   2001,
	"Regist_Ans":   2002,
	"Ping_Req":     1001,
	"Pong_Ans":     1002,
	"Relay_Req":    101,
	"Relay_Ans":    102,
	"Relay_Not":    103,
}

func (x Msg_Id) Enum() *Msg_Id {
	p := new(Msg_Id)
	*p = x
	return p
}
func (x Msg_Id) String() string {
	return proto.EnumName(Msg_Id_name, int32(x))
}
func (x *Msg_Id) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Msg_Id_value, data, "Msg_Id")
	if err != nil {
		return err
	}
	*x = Msg_Id(value)
	return nil
}
func (Msg_Id) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type TestMessage_SmallType int32

const (
	TestMessage_NORMAL TestMessage_SmallType = 0
	TestMessage_HARD   TestMessage_SmallType = 1
	TestMessage_HELL   TestMessage_SmallType = 2
)

var TestMessage_SmallType_name = map[int32]string{
	0: "NORMAL",
	1: "HARD",
	2: "HELL",
}
var TestMessage_SmallType_value = map[string]int32{
	"NORMAL": 0,
	"HARD":   1,
	"HELL":   2,
}

func (x TestMessage_SmallType) Enum() *TestMessage_SmallType {
	p := new(TestMessage_SmallType)
	*p = x
	return p
}
func (x TestMessage_SmallType) String() string {
	return proto.EnumName(TestMessage_SmallType_name, int32(x))
}
func (x *TestMessage_SmallType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TestMessage_SmallType_value, data, "TestMessage_SmallType")
	if err != nil {
		return err
	}
	*x = TestMessage_SmallType(value)
	return nil
}
func (TestMessage_SmallType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// sample struct
type TestMessage struct {
	TestString       *string                `protobuf:"bytes,1,req,name=testString" json:"testString,omitempty"`
	TestUint32       *uint32                `protobuf:"varint,2,req,name=testUint32" json:"testUint32,omitempty"`
	TestSmallType    *TestMessage_SmallType `protobuf:"varint,3,req,name=testSmallType,enum=msg.TestMessage_SmallType" json:"testSmallType,omitempty"`
	TestTestType     *TestType              `protobuf:"varint,4,opt,name=testTestType,enum=msg.TestType,def=0" json:"testTestType,omitempty"`
	TestBool         *bool                  `protobuf:"varint,5,req,name=testBool" json:"testBool,omitempty"`
	TestInt32        *int32                 `protobuf:"varint,6,req,name=testInt32" json:"testInt32,omitempty"`
	TestUint64       *uint64                `protobuf:"varint,7,opt,name=testUint64" json:"testUint64,omitempty"`
	TestFloat        *float32               `protobuf:"fixed32,8,opt,name=testFloat" json:"testFloat,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *TestMessage) Reset()                    { *m = TestMessage{} }
func (m *TestMessage) String() string            { return proto.CompactTextString(m) }
func (*TestMessage) ProtoMessage()               {}
func (*TestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_TestMessage_TestTestType TestType = TestType_TYPE_1

func (m *TestMessage) GetTestString() string {
	if m != nil && m.TestString != nil {
		return *m.TestString
	}
	return ""
}

func (m *TestMessage) GetTestUint32() uint32 {
	if m != nil && m.TestUint32 != nil {
		return *m.TestUint32
	}
	return 0
}

func (m *TestMessage) GetTestSmallType() TestMessage_SmallType {
	if m != nil && m.TestSmallType != nil {
		return *m.TestSmallType
	}
	return TestMessage_NORMAL
}

func (m *TestMessage) GetTestTestType() TestType {
	if m != nil && m.TestTestType != nil {
		return *m.TestTestType
	}
	return Default_TestMessage_TestTestType
}

func (m *TestMessage) GetTestBool() bool {
	if m != nil && m.TestBool != nil {
		return *m.TestBool
	}
	return false
}

func (m *TestMessage) GetTestInt32() int32 {
	if m != nil && m.TestInt32 != nil {
		return *m.TestInt32
	}
	return 0
}

func (m *TestMessage) GetTestUint64() uint64 {
	if m != nil && m.TestUint64 != nil {
		return *m.TestUint64
	}
	return 0
}

func (m *TestMessage) GetTestFloat() float32 {
	if m != nil && m.TestFloat != nil {
		return *m.TestFloat
	}
	return 0
}

// sample mseeage
type LoginReq struct {
	Id               *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginReq) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type LoginAns struct {
	Err              *ErrorCode `protobuf:"varint,1,req,name=err,enum=msg.ErrorCode" json:"err,omitempty"`
	Id               *uint32    `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Name             *string    `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Platform         *uint32    `protobuf:"varint,4,opt,name=platform" json:"platform,omitempty"`
	Gem              *uint32    `protobuf:"varint,5,opt,name=gem" json:"gem,omitempty"`
	Gold             *uint32    `protobuf:"varint,6,opt,name=gold" json:"gold,omitempty"`
	SecKey           *string    `protobuf:"bytes,7,opt,name=secKey" json:"secKey,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *LoginAns) Reset()                    { *m = LoginAns{} }
func (m *LoginAns) String() string            { return proto.CompactTextString(m) }
func (*LoginAns) ProtoMessage()               {}
func (*LoginAns) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LoginAns) GetErr() ErrorCode {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ErrorCode_ERR_SUCCESS
}

func (m *LoginAns) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *LoginAns) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LoginAns) GetPlatform() uint32 {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return 0
}

func (m *LoginAns) GetGem() uint32 {
	if m != nil && m.Gem != nil {
		return *m.Gem
	}
	return 0
}

func (m *LoginAns) GetGold() uint32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *LoginAns) GetSecKey() string {
	if m != nil && m.SecKey != nil {
		return *m.SecKey
	}
	return ""
}

type EnterChReq struct {
	ChNo             *uint32 `protobuf:"varint,1,req,name=chNo" json:"chNo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EnterChReq) Reset()                    { *m = EnterChReq{} }
func (m *EnterChReq) String() string            { return proto.CompactTextString(m) }
func (*EnterChReq) ProtoMessage()               {}
func (*EnterChReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EnterChReq) GetChNo() uint32 {
	if m != nil && m.ChNo != nil {
		return *m.ChNo
	}
	return 0
}

type EnterChAns struct {
	Err              *ErrorCode `protobuf:"varint,1,req,name=err,enum=msg.ErrorCode" json:"err,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *EnterChAns) Reset()                    { *m = EnterChAns{} }
func (m *EnterChAns) String() string            { return proto.CompactTextString(m) }
func (*EnterChAns) ProtoMessage()               {}
func (*EnterChAns) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EnterChAns) GetErr() ErrorCode {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ErrorCode_ERR_SUCCESS
}

type LeaveChReq struct {
	ChNo             *uint32 `protobuf:"varint,1,req,name=chNo" json:"chNo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeaveChReq) Reset()                    { *m = LeaveChReq{} }
func (m *LeaveChReq) String() string            { return proto.CompactTextString(m) }
func (*LeaveChReq) ProtoMessage()               {}
func (*LeaveChReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LeaveChReq) GetChNo() uint32 {
	if m != nil && m.ChNo != nil {
		return *m.ChNo
	}
	return 0
}

type LeaveChAns struct {
	Err              *ErrorCode `protobuf:"varint,1,req,name=err,enum=msg.ErrorCode" json:"err,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *LeaveChAns) Reset()                    { *m = LeaveChAns{} }
func (m *LeaveChAns) String() string            { return proto.CompactTextString(m) }
func (*LeaveChAns) ProtoMessage()               {}
func (*LeaveChAns) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LeaveChAns) GetErr() ErrorCode {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ErrorCode_ERR_SUCCESS
}

type EnterRmReq struct {
	RmNo             *uint32 `protobuf:"varint,1,req,name=rmNo" json:"rmNo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EnterRmReq) Reset()                    { *m = EnterRmReq{} }
func (m *EnterRmReq) String() string            { return proto.CompactTextString(m) }
func (*EnterRmReq) ProtoMessage()               {}
func (*EnterRmReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *EnterRmReq) GetRmNo() uint32 {
	if m != nil && m.RmNo != nil {
		return *m.RmNo
	}
	return 0
}

type EnterRmAns struct {
	Err              *ErrorCode `protobuf:"varint,1,req,name=err,enum=msg.ErrorCode" json:"err,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *EnterRmAns) Reset()                    { *m = EnterRmAns{} }
func (m *EnterRmAns) String() string            { return proto.CompactTextString(m) }
func (*EnterRmAns) ProtoMessage()               {}
func (*EnterRmAns) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *EnterRmAns) GetErr() ErrorCode {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ErrorCode_ERR_SUCCESS
}

type EnterRmNot struct {
	Names            []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *EnterRmNot) Reset()                    { *m = EnterRmNot{} }
func (m *EnterRmNot) String() string            { return proto.CompactTextString(m) }
func (*EnterRmNot) ProtoMessage()               {}
func (*EnterRmNot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *EnterRmNot) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type LeaveRmReq struct {
	RmNo             *uint32 `protobuf:"varint,1,req,name=rmNo" json:"rmNo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeaveRmReq) Reset()                    { *m = LeaveRmReq{} }
func (m *LeaveRmReq) String() string            { return proto.CompactTextString(m) }
func (*LeaveRmReq) ProtoMessage()               {}
func (*LeaveRmReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *LeaveRmReq) GetRmNo() uint32 {
	if m != nil && m.RmNo != nil {
		return *m.RmNo
	}
	return 0
}

type LeaveRmAns struct {
	Err              *ErrorCode `protobuf:"varint,1,req,name=err,enum=msg.ErrorCode" json:"err,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *LeaveRmAns) Reset()                    { *m = LeaveRmAns{} }
func (m *LeaveRmAns) String() string            { return proto.CompactTextString(m) }
func (*LeaveRmAns) ProtoMessage()               {}
func (*LeaveRmAns) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *LeaveRmAns) GetErr() ErrorCode {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ErrorCode_ERR_SUCCESS
}

type LeaveRmNot struct {
	Names            []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *LeaveRmNot) Reset()                    { *m = LeaveRmNot{} }
func (m *LeaveRmNot) String() string            { return proto.CompactTextString(m) }
func (*LeaveRmNot) ProtoMessage()               {}
func (*LeaveRmNot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *LeaveRmNot) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type RelayReq struct {
	RmNo             *uint32 `protobuf:"varint,1,req,name=rmNo" json:"rmNo,omitempty"`
	Data             *string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RelayReq) Reset()                    { *m = RelayReq{} }
func (m *RelayReq) String() string            { return proto.CompactTextString(m) }
func (*RelayReq) ProtoMessage()               {}
func (*RelayReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RelayReq) GetRmNo() uint32 {
	if m != nil && m.RmNo != nil {
		return *m.RmNo
	}
	return 0
}

func (m *RelayReq) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

type RelayAns struct {
	Err              *ErrorCode `protobuf:"varint,1,req,name=err,enum=msg.ErrorCode" json:"err,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *RelayAns) Reset()                    { *m = RelayAns{} }
func (m *RelayAns) String() string            { return proto.CompactTextString(m) }
func (*RelayAns) ProtoMessage()               {}
func (*RelayAns) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RelayAns) GetErr() ErrorCode {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ErrorCode_ERR_SUCCESS
}

type RelayNot struct {
	RmNo             *uint32 `protobuf:"varint,1,req,name=rmNo" json:"rmNo,omitempty"`
	Data             *string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RelayNot) Reset()                    { *m = RelayNot{} }
func (m *RelayNot) String() string            { return proto.CompactTextString(m) }
func (*RelayNot) ProtoMessage()               {}
func (*RelayNot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RelayNot) GetRmNo() uint32 {
	if m != nil && m.RmNo != nil {
		return *m.RmNo
	}
	return 0
}

func (m *RelayNot) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

type RegistReq struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Platform         *uint32 `protobuf:"varint,2,req,name=platform" json:"platform,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RegistReq) Reset()                    { *m = RegistReq{} }
func (m *RegistReq) String() string            { return proto.CompactTextString(m) }
func (*RegistReq) ProtoMessage()               {}
func (*RegistReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *RegistReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RegistReq) GetPlatform() uint32 {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return 0
}

type RegistAns struct {
	Err              *ErrorCode `protobuf:"varint,1,req,name=err,enum=msg.ErrorCode" json:"err,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *RegistAns) Reset()                    { *m = RegistAns{} }
func (m *RegistAns) String() string            { return proto.CompactTextString(m) }
func (*RegistAns) ProtoMessage()               {}
func (*RegistAns) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RegistAns) GetErr() ErrorCode {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ErrorCode_ERR_SUCCESS
}

func init() {
	proto.RegisterType((*TestMessage)(nil), "msg.TestMessage")
	proto.RegisterType((*LoginReq)(nil), "msg.LoginReq")
	proto.RegisterType((*LoginAns)(nil), "msg.LoginAns")
	proto.RegisterType((*EnterChReq)(nil), "msg.EnterChReq")
	proto.RegisterType((*EnterChAns)(nil), "msg.EnterChAns")
	proto.RegisterType((*LeaveChReq)(nil), "msg.LeaveChReq")
	proto.RegisterType((*LeaveChAns)(nil), "msg.LeaveChAns")
	proto.RegisterType((*EnterRmReq)(nil), "msg.EnterRmReq")
	proto.RegisterType((*EnterRmAns)(nil), "msg.EnterRmAns")
	proto.RegisterType((*EnterRmNot)(nil), "msg.EnterRmNot")
	proto.RegisterType((*LeaveRmReq)(nil), "msg.LeaveRmReq")
	proto.RegisterType((*LeaveRmAns)(nil), "msg.LeaveRmAns")
	proto.RegisterType((*LeaveRmNot)(nil), "msg.LeaveRmNot")
	proto.RegisterType((*RelayReq)(nil), "msg.RelayReq")
	proto.RegisterType((*RelayAns)(nil), "msg.RelayAns")
	proto.RegisterType((*RelayNot)(nil), "msg.RelayNot")
	proto.RegisterType((*RegistReq)(nil), "msg.RegistReq")
	proto.RegisterType((*RegistAns)(nil), "msg.RegistAns")
	proto.RegisterEnum("msg.TestType", TestType_name, TestType_value)
	proto.RegisterEnum("msg.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("msg.Msg_Id", Msg_Id_name, Msg_Id_value)
	proto.RegisterEnum("msg.TestMessage_SmallType", TestMessage_SmallType_name, TestMessage_SmallType_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 716 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0x37, 0x3f, 0xb5, 0xa7, 0x75, 0xe2, 0xae, 0x00, 0x59, 0x15, 0x42, 0x96, 0x4f, 0x56,
	0x81, 0x48, 0xa4, 0x08, 0x09, 0xb8, 0x10, 0x42, 0x5a, 0x22, 0x92, 0xb4, 0xda, 0xa4, 0x07, 0x4e,
	0x91, 0xd5, 0x6c, 0xdd, 0x48, 0xb1, 0xb7, 0xb5, 0x2d, 0xa4, 0xbe, 0x12, 0x6f, 0x03, 0x6f, 0x01,
	0x1c, 0x78, 0x05, 0x34, 0x13, 0xc7, 0x8e, 0x85, 0x5a, 0xf9, 0x36, 0xf3, 0xcd, 0xf7, 0x7d, 0x33,
	0x3b, 0x99, 0x18, 0x20, 0x95, 0x49, 0xda, 0xb9, 0x89, 0x55, 0xaa, 0x78, 0x2d, 0x4c, 0x02, 0xf7,
	0x2f, 0x83, 0xbd, 0x99, 0x4c, 0xd2, 0xb1, 0x4c, 0x12, 0x3f, 0x90, 0xfc, 0xd9, 0x9a, 0x32, 0x4d,
	0xe3, 0x65, 0x14, 0xd8, 0x9a, 0xc3, 0x3c, 0x43, 0x6c, 0x21, 0x9b, 0xfa, 0xc5, 0x32, 0x4a, 0x8f,
	0xbb, 0x36, 0x73, 0x98, 0x67, 0x8a, 0x2d, 0x84, 0x7f, 0x00, 0x93, 0xd8, 0xa1, 0xbf, 0x5a, 0xcd,
	0xee, 0x6e, 0xa4, 0x5d, 0x73, 0x98, 0xd7, 0xea, 0x1e, 0x76, 0xc2, 0x24, 0xe8, 0x6c, 0x35, 0xea,
	0xe4, 0x0c, 0x51, 0x16, 0xf0, 0xb7, 0xb0, 0x8f, 0x00, 0x72, 0xc9, 0xa0, 0xee, 0x68, 0x5e, 0xab,
	0x6b, 0xe6, 0x06, 0x08, 0xbe, 0x6b, 0xce, 0xbe, 0x9e, 0x0f, 0xe6, 0xaf, 0x44, 0x89, 0xca, 0x0f,
	0x41, 0xc7, 0xfc, 0xa3, 0x52, 0x2b, 0xbb, 0xe1, 0x30, 0x4f, 0x17, 0x79, 0xce, 0x9f, 0x82, 0x81,
	0xf1, 0x90, 0xe6, 0x6e, 0x3a, 0xcc, 0x6b, 0x88, 0x02, 0xd8, 0x7e, 0xd6, 0x9b, 0xd7, 0xf6, 0xae,
	0xa3, 0x79, 0x75, 0xb1, 0x85, 0x6c, 0xd4, 0x27, 0x2b, 0xe5, 0xa7, 0xb6, 0xee, 0x68, 0x1e, 0x13,
	0x05, 0xe0, 0x3e, 0x07, 0xa3, 0x98, 0x1f, 0xa0, 0x39, 0x39, 0x13, 0xe3, 0xde, 0xc8, 0xda, 0xe1,
	0x3a, 0xd4, 0x3f, 0xf7, 0xc4, 0x27, 0x4b, 0xa3, 0x68, 0x30, 0x1a, 0x59, 0xcc, 0x3d, 0x04, 0x7d,
	0xa4, 0x82, 0x65, 0x24, 0xe4, 0x2d, 0x6f, 0x01, 0x5b, 0x2e, 0xb2, 0x2d, 0xb3, 0xe5, 0xc2, 0xfd,
	0xae, 0x65, 0xc5, 0x5e, 0x94, 0x70, 0x07, 0x6a, 0x32, 0x8e, 0xa9, 0xda, 0xea, 0xb6, 0xe8, 0xfd,
	0x83, 0x38, 0x56, 0x71, 0x5f, 0x2d, 0xa4, 0xc0, 0x52, 0x26, 0x67, 0x8e, 0xe6, 0x99, 0x28, 0xe7,
	0x1c, 0xea, 0x91, 0x1f, 0xe2, 0xce, 0x35, 0xcf, 0x10, 0x14, 0xe3, 0x4e, 0x6e, 0x56, 0x7e, 0x7a,
	0xa5, 0xe2, 0x90, 0x56, 0x69, 0x8a, 0x3c, 0xe7, 0x16, 0xd4, 0x02, 0x19, 0xda, 0x0d, 0x82, 0x31,
	0x44, 0x87, 0x40, 0xad, 0x16, 0x76, 0x93, 0x20, 0x8a, 0xf9, 0x13, 0x68, 0x26, 0xf2, 0xf2, 0x8b,
	0xbc, 0xa3, 0xbd, 0x18, 0x22, 0xcb, 0x5c, 0x07, 0x60, 0x10, 0xa5, 0x32, 0xee, 0x5f, 0xe3, 0x53,
	0x38, 0xd4, 0x2f, 0xaf, 0x27, 0x8a, 0xc6, 0x35, 0x05, 0xc5, 0x6e, 0x27, 0x67, 0x54, 0x7a, 0x0f,
	0x3a, 0x8e, 0xa4, 0xff, 0x4d, 0x3e, 0xe8, 0x98, 0x31, 0x2a, 0x3b, 0xd2, 0x04, 0x22, 0xcc, 0x1c,
	0xe3, 0xb0, 0x70, 0xc4, 0x38, 0x9f, 0x51, 0x84, 0xd5, 0x1c, 0xdd, 0x9c, 0x3f, 0x51, 0x29, 0x7f,
	0x04, 0x0d, 0xdc, 0x72, 0x62, 0x6b, 0x4e, 0xcd, 0x33, 0xc4, 0x3a, 0xc9, 0xdf, 0xf1, 0x60, 0xd7,
	0x8c, 0x51, 0xb9, 0x6b, 0xc6, 0xbf, 0xbf, 0x6b, 0x17, 0x74, 0x21, 0x57, 0xfe, 0xdd, 0x3d, 0x3d,
	0x11, 0x5b, 0xf8, 0xa9, 0x4f, 0xf7, 0x62, 0x08, 0x8a, 0xdd, 0x17, 0x99, 0xa6, 0xda, 0x14, 0x9b,
	0x0e, 0x38, 0x43, 0xd5, 0x0e, 0xef, 0xc1, 0x10, 0x32, 0x58, 0x26, 0x69, 0x36, 0x16, 0x1d, 0xe8,
	0xfa, 0xe2, 0xff, 0x3f, 0xd0, 0xf5, 0xf7, 0x24, 0xcf, 0xdd, 0x97, 0x1b, 0x71, 0xa5, 0xf9, 0x8e,
	0x3a, 0xa0, 0xe7, 0xdf, 0x02, 0x80, 0xec, 0x1b, 0x61, 0xed, 0xe4, 0x71, 0xd7, 0xd2, 0xf2, 0xf8,
	0xd8, 0x62, 0x47, 0xa7, 0x60, 0xe4, 0x0e, 0xbc, 0x0d, 0x7b, 0x03, 0x21, 0xe6, 0xd3, 0x8b, 0x7e,
	0x7f, 0x30, 0x9d, 0x5a, 0x3b, 0x9c, 0x43, 0x0b, 0x81, 0xd1, 0xd9, 0xe9, 0x70, 0x32, 0x3f, 0xe9,
	0x0d, 0x47, 0x96, 0xc6, 0x1f, 0xc3, 0x01, 0x62, 0x3d, 0x71, 0x7a, 0x31, 0x1e, 0x4c, 0x66, 0x6b,
	0x98, 0x1d, 0xfd, 0x61, 0xd0, 0x1c, 0x27, 0xc1, 0x7c, 0xb8, 0xe0, 0x26, 0x18, 0xf4, 0x0f, 0x9e,
	0x0b, 0x79, 0x6b, 0x69, 0x45, 0xda, 0x8b, 0x12, 0x8b, 0x71, 0x0b, 0xf6, 0xe9, 0x7a, 0xe6, 0xfd,
	0x6b, 0x22, 0xd4, 0x4a, 0x08, 0x72, 0xea, 0x25, 0x64, 0xa2, 0x52, 0xab, 0x81, 0x08, 0xfd, 0xfa,
	0x1b, 0x55, 0xb3, 0x84, 0xa0, 0x6a, 0xb7, 0x84, 0xa0, 0x4a, 0x2f, 0x7c, 0x44, 0x48, 0x2a, 0xb3,
	0x84, 0xa0, 0xaa, 0x55, 0x42, 0x50, 0xd5, 0x2e, 0x7c, 0x32, 0x95, 0x55, 0x42, 0x50, 0x75, 0x50,
	0x42, 0x50, 0xc5, 0x79, 0x1b, 0x60, 0xfd, 0x43, 0x91, 0xe6, 0x47, 0x7b, 0x0b, 0x40, 0xc9, 0xcf,
	0x36, 0x37, 0x41, 0x3f, 0x5f, 0x46, 0x01, 0xd5, 0x7f, 0xed, 0x52, 0xaa, 0xa2, 0x80, 0xaa, 0xbf,
	0x31, 0x35, 0xe8, 0xb2, 0xa8, 0x2c, 0x8b, 0x14, 0xcb, 0x57, 0x45, 0x8a, 0xcd, 0x82, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x3c, 0x2b, 0x3e, 0x07, 0xc5, 0x06, 0x00, 0x00,
}
